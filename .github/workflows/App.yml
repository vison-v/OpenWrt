name: Openwrt-x86_64-App

on: 
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - main
    paths:
      - '.github/workflows/App.yml'
  #schedule:
  #  - cron: 0 2 * * *
  #watch:
  #  types: started

jobs:
  build:
    runs-on: ubuntu-latest
    
    name: Build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [app.openclash]
        
    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: 加载环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang llvm flex g++ gawk gcc-multilib gettext \
        git libncurses5-dev libssl-dev python3-distutils python3-pyelftools python3-setuptools \
        libpython3-dev rsync unzip zlib1g-dev swig aria2 jq subversion qemu-utils ccache rename \
        libelf-dev device-tree-compiler libgnutls28-dev coccinelle libgmp3-dev libmpc-dev
        sudo -E apt-get -qq purge azure-cli ghc* zulu* firefox powershell openjdk* dotnet* google* mysql* php* android*
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        
        df -h
    
    - name: 设置变量
      id: ENV
      run: |
        source "${GITHUB_WORKSPACE}/App/${{matrix.target}}"
        echo "date=$(date +'%m.%d')" >> $GITHUB_ENV
        echo "APP_NAME=${APP_NAME}" >> $GITHUB_ENV
        echo "APP_LINK=${APP_LINK}" >> $GITHUB_ENV
      
    - name: 准备SDK
      run: |
        wget https://archive.openwrt.org/releases/23.05.4/targets/x86/64/openwrt-sdk-23.05.4-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
        mkdir openwrt && tar xf openwrt-*.tar.xz && rm openwrt-*.xz
        mv openwrt-*/* openwrt && rm -rf openwrt-*
        
    - name: 清理磁盘
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo mkdir -p -m 777 /mnt/openwrt/dl /mnt/openwrt/staging_dir
        ln -sf /mnt/openwrt/dl openwrt/dl
        ln -sf /mnt/openwrt/staging_dir openwrt/staging_dir
    
    - name: 克隆项目
      run: |
        cp -rf App/. openwrt/
        cd openwrt
        echo "src-git ${{env.APP_NAME}} ${{env.APP_LINK}}" >> feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install ${{env.APP_NAME}}
        #chmod +x ${{matrix.target}}
        #/bin/bash "${{matrix.target}}"
        echo "CONFIG_PACKAGE_${{env.APP_NAME}}=y" >> .config
    
    - name: 下载依赖包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j16
        
    - name: 开始编译
      run: | 
        cd openwrt
        make package/${{env.APP_NAME}}/compile V=99
        du -h --max-depth=4 ./bin
        
    - name: 准备编译好的ipk
      run: |
        cd openwrt
        mkdir -p ./artifact/IPK
        find ./bin/x86/packages/base/ -type f -name "*.ipk" | xargs -i mv -f {} ./artifact/IPK/
        cd ./artifact/IPK
        echo "IPK=$PWD" >> $GITHUB_ENV
        
    - name: 上传ipk
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.date }} ${{ env.APP_NAME }}
        path: ${{ env.IPK }}/        
