name: Openwrt-x86_64-App

on: 
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - main
    paths:
      - '.github/workflows/App.yml'
  #schedule:
  #  - cron: 0 2 * * *
  #watch:
  #  types: started

jobs:
  build:
    runs-on: ubuntu-latest
    
    name: Build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [app.openclash]
        
    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: 加载环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig rename
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        
        df -h
    
    - name: 设置变量
      id: ENV
      run: |
        source "${GITHUB_WORKSPACE}/App/${{matrix.target}}"
        echo "date=$(date +'%m.%d')" >> $GITHUB_ENV
        echo "APP_NAME=${APP_NAME}" >> $GITHUB_ENV
      
    - name: 准备SDK
      run: |
        wget https://archive.openwrt.org/snapshots/trunk/x86/64/OpenWrt-SDK-x86-64_gcc-5.3.0_musl-1.1.16.Linux-x86_64.tar.bz2
        tar xjf OpenWrt-SDK-x86-64_gcc-5.3.0_musl-1.1.16.Linux-x86_64.tar.bz2 && mv OpenWrt-SDK-x86-64_gcc-5.3.0_musl-1.1.16.Linux-x86_64 openwrt
        
    - name: 清理磁盘
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo mkdir -p -m 777 /mnt/openwrt/dl /mnt/openwrt/staging_dir
        ln -sf /mnt/openwrt/dl openwrt/dl
        ln -sf /mnt/openwrt/staging_dir openwrt/staging_dir
    
    - name: 克隆项目
      run: |
        cp -rf App/. openwrt/
        cd openwrt
        chmod +x ${{matrix.target}}
        /bin/bash "${{matrix.target}}"
        ./scripts/feeds update package
        ./scripts/feeds install -a -p package

    - name: 开始编译
      run: | 
        cd openwrt
        make package/$APP_NAME/$APP_NAME/compile V=99
        du -h --max-depth=4 ./bin
        
    - name: 准备编译好的ipk
      run: |
        cd openwrt
        mkdir -p ./artifact/IPK
        find ./bin/x86/packages/base/ -type f -name "*.ipk" | xargs -i mv -f {} ./artifact/IPK/
        cd ./artifact/IPK
        echo "IPK=$PWD" >> $GITHUB_ENV
        
    - name: 上传ipk
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.date }} ${{ env.APP_NAME }}
        path: ${{ env.IPK }}/        
