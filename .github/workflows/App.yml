name: Openwrt-x86_64-App

on: 
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - main
  #  paths:
  #    - '.github/workflows/App.yml'
  #schedule:
  #  - cron: 40 19 * * *
  #watch:
  #  types: started

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    
    name: Build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [luci-app-lucky,lucky]
        
    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: 加载环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang llvm flex g++ gawk gcc-multilib gettext \
        git libncurses5-dev libssl-dev python3-distutils python3-pyelftools python3-setuptools \
        libpython3-dev rsync unzip zlib1g-dev swig aria2 jq subversion qemu-utils ccache rename \
        libelf-dev device-tree-compiler libgnutls28-dev coccinelle libgmp3-dev libmpc-dev
        sudo -E apt-get -qq purge azure-cli ghc* zulu* firefox powershell openjdk* dotnet* google* mysql* php* android*
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
    
    - name: 设置变量
      id: ENV
      run: |
        echo "date=$(date +'%m.%d')" >> $GITHUB_ENV
      
    - name: 准备SDK
      run: |
        wget https://downloads.immortalwrt.org/releases/23.05-SNAPSHOT/targets/x86/64/immortalwrt-sdk-23.05-SNAPSHOT-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
        mkdir openwrt && tar xf immortalwrt-*.xz && rm immortalwrt-*.xz
        mv immortalwrt-*/* openwrt && rm -rf immortalwrt-*
    
    - name: 编译 po2lmo
      run: |
        cd openwrt
        git clone https://github.com/openwrt-dev/po2lmo.git
        pushd po2lmo
        make && sudo make install
        popd
    
    - name: 克隆项目
      run: |
        cp -rf App/. openwrt/
        cd openwrt
        ./scripts/feeds update -a && rm -rf feeds/luci/applications/luci-app-*
        git clone https://github.com/kiddin9/kwrt-packages.git && mv -n kwrt-*/${{matrix.target}} package && rm -rf kwrt-*
        #git clone https://github.com/kenzok8/small.git && mv -n small/* package && rm -rf small
        #git clone https://github.com/vison-v/nginx-proxy.git package/nginx-proxy
        ./scripts/feeds update -a
        ./scripts/feeds install ${{matrix.target}}
        if [ -f "${{matrix.target}}" ]; then
          chmod +x ${{matrix.target}}
          /bin/bash "${{matrix.target}}"
        fi
        echo "CONFIG_PACKAGE_${{matrix.target}}=y" >> .config
        du -h --max-depth=4 ./package
    
    - name: 下载依赖包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j16
        
    - name: 开始编译
      run: | 
        cd openwrt
        make package/${{matrix.target}}/compile V=99
        du -h --max-depth=4 ./bin
        
    - name: 准备编译好的ipk
      run: |
        cd openwrt
        mkdir -p ./artifact/IPK
        find ./bin/packages/*/*/  -maxdepth 1 -type f -name "*.ipk" | xargs -i mv -f {} ./artifact/IPK/
        cd ./artifact/IPK
        echo "IPK=$PWD" >> $GITHUB_ENV
        
    - name: 上传ipk
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.date }} ${{matrix.target}}
        path: ${{ env.IPK }}/        

    - name: 清理文件
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ secrets.PAT }}
        retain_days: 5
        keep_minimum_runs: 1
