name: Openwrt-x86-64-App  

on:   
  schedule:  
    - cron: "5 0 * * *"  
  workflow_dispatch:  

env:  
  TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}  
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}  

jobs:  
  build:  
    runs-on: ubuntu-latest  
    if: github.event.repository.owner.id == github.event.sender.id || !github.event.sender.id  
    
    name: Build ${{ matrix.target }}  
    strategy:  
      fail-fast: false  
      matrix:  
        target: [luci-app-quickstart, luci-app-fchomo, luci-app-homeproxy, luci-app-mihomo, luci-app-mosdns, luci-app-openclash, luci-app-passwall, luci-app-passwall2]  
        
    steps:  
    - name: Checkout  
      uses: actions/checkout@v2  
      
    - name: 加载环境  
      env:  
        DEBIAN_FRONTEND: noninteractive  
      run: |  
          sudo apt update
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev \
          libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev \
          libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf npm python3 \
          python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo \
          uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev  

          sudo apt -y autoremove --purge  
          sudo apt -y clean  
    
    - name: 设置变量  
      id: ENV  
      run: |  
        echo "date=$(date +'%m.%d')" >> $GITHUB_ENV  
      
    - name: 准备SDK  
      run: |  
        wget https://downloads.immortalwrt.org/releases/23.05-SNAPSHOT/targets/x86/64/immortalwrt-sdk-23.05-SNAPSHOT-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz  
        mkdir OpenWrt && tar xf immortalwrt-*.xz && rm immortalwrt-*.xz  
        mv immortalwrt-*/* OpenWrt && rm -rf immortalwrt-*  
    
    - name: 编译 po2lmo  
      run: |  
        cd OpenWrt  
        git clone https://github.com/openwrt-dev/po2lmo.git  
        pushd po2lmo  
        make && sudo make install  
        popd  
    
    - name: 克隆项目  
      run: |  
        cp -rf App/. OpenWrt/  
        cd OpenWrt  
        ./scripts/feeds update -a && rm -rf feeds/luci/applications/luci-app-*  
        git clone -b lede https://github.com/vison-v/packages && mv -n packages/* package && rm -rf packages  
        ./scripts/feeds install ${{ matrix.target }}  
        
        # 检查当前目录下是否存在目标文件  
        if [ -f "${{ matrix.target }}" ]; then  
          chmod +x "${{ matrix.target }}"  
          /bin/bash ./"${{ matrix.target }}"  
        else  
          echo "${{ matrix.target }} 文件不存在，无法执行。"  
        fi  

        echo "CONFIG_PACKAGE_${{ matrix.target }}=y" >> .config  
        du -h --max-depth=4 ./package  
    
    - name: 下载依赖包  
      id: package  
      run: |  
        cd OpenWrt  
        make defconfig  
        make download -j16  
        
    - name: 开始编译  
      run: |   
        cd OpenWrt  
        make package/${{ matrix.target }}/compile V=99  
        du -h --max-depth=4 ./bin  
        
    - name: 准备编译好的ipk  
      run: |  
        cd OpenWrt  
        mkdir -p ./artifact/IPK  
        find ./bin/packages/*/*/ -maxdepth 1 -type f -name "*.ipk" | xargs -i mv -f {} ./artifact/IPK/  
        cd ./artifact/IPK  
        echo "IPK=$PWD" >> $GITHUB_ENV  
        
    - name: 上传ipk  
      uses: actions/upload-artifact@v3  
      id: upipk  
      with:  
        name: ${{ env.date }} ${{ matrix.target }}  
        path: ${{ env.IPK }}/
